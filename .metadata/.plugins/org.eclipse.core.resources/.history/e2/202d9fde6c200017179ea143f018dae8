package com.wbl.page;

import java.util.List;
import java.util.NoSuchElementException;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.wbl.helper.ByClass;

public class AmazonAddToCart {

	WebDriver driver;
	
	double cartTotal = 0.0;

	// AmazonHomePage ahp ;

	public AmazonAddToCart(WebDriver driver) {

		this.driver = driver;

	}

 
// **************************** add to cart ****************************************

	public String addItem(String item ) {
		
		
  System.out.println("entered add item "  );

// ****** item **************		
	
	WebDriverWait wait = new WebDriverWait(driver, 20);	
	
	wait.until(ExpectedConditions
			.visibilityOfElementLocated(ByClass.getByObject("xpath-cartItem",item,"')]"))).click();
	
	
	System.out.println("the add item title is : " + driver.getTitle());
	
	return driver.getTitle();
	

	}
	
	
// *********************************************************************************************	
	 
	
	public String addSize(String itemSize ) {
	
	
	System.out.println(" the size is : " + itemSize);
 	String result = "" ;
		
	if (itemSize.equals(" ")) {
		return "Size not applicable for this item as its empty" ;
	}
	
	 String[] str = itemSize.split(",");
	 
	 String size = str[0];
	 String size1 = str[1];   // value of option
//	 String size2 = str[2];
    
	WebDriverWait wait = new WebDriverWait(driver, 20);	

 	
	WebElement element = wait.until(ExpectedConditions
			.visibilityOfElementLocated(ByClass.getByObject("id-addSize")));
	
//			.visibilityOfElementLocated(ByClass.getByObject("id-addSize",size,"']")));
	
	Select sel = new Select(element);
	
	List<WebElement> sizeOpts = sel.getOptions();
	
	  for(WebElement opts : sizeOpts) {
      	
      	System.out.println("the list is : " + opts.getText().trim() + "  size :  " + size + " attribute : " + opts.getAttribute("class"));
      	
      	if  (size.trim().equals(opts.getText().trim() ))  {
      	
      		System.out.println("the sizes " + size + "  " + opts.getText() + " attrbiute : " + opts.getAttribute("class") );
      		
      	   if (opts.getAttribute("class").equals("dropdownAvailable")) {
      		   
      		   System.out.println("size matched");
      		
        	 	 sel.selectByVisibleText(size.trim());
        	 	 
        	 	 result = " size selelcted" ;
        	 	 break;
      	   }   	   
      	   /*else {
    	    	result =  ("given size not available  (checked with class atrribute)  ");

        	}  	     
       	     
       	     
         } else    {
        	 
        	 result =  ("given size not available in the available list" );*/
        	 
        	 }
      	
        }  // end of for loop
        	 
   	
	return result;
      	
	}
	
	
// *********************************************************************************************	
	
	public String addColor( String color ) {
		
		
		System.out.println(" the color  is : " + color);
	 	String result = "" ;
			
		if (color.equals(" ")) {
			return "Color  not applicable for this item as its empty" ;
		}
		
		 
		
		String[] colorDetails = color.split(",");
		
//		String colorName = colorDetails[0];
		String colorNum = colorDetails[1];
	
	
  WebDriverWait wait = new WebDriverWait(driver, 20);	
	
 WebElement element	 = wait.until(ExpectedConditions
			.visibilityOfElementLocated(ByClass.getByObject("css-addColor",colorNum,"']")));
	
	String colAvailability = element.getAttribute("class");
	
	System.out.println("color availability : " + colAvailability);

	
if(colAvailability.equals("swatchAvailable")){
	
	
	   element.click();
	   
	   result = " color matched";

 }
  else {	
	  
		System.out.println("given color not available ");
		result =  ("given color not available ");
		

	
}
	
//  return driver.getTitle();

 return result;
  
	}
	
	
// *********************************************************************************************	
	
	
public String addQnty( String qnty )  throws InterruptedException, TimeoutException {
		
String result = " ";

WebElement ele;

Boolean present = false;		
 
if (qnty.equals(" ") ){
	
	System.out.println("the quantity is not given");
	
	return "the quantity is not given";
} 

System.out.println("the quantity  given : " + qnty);


try {
	Thread.sleep(2000);
	
} 
catch (InterruptedException e) {
	
 	e.printStackTrace();
}


	
if(Integer.parseInt(qnty) > 1) {
	
  WebDriverWait wait = new WebDriverWait(driver, 20);	
 
  try {
//	      ele = driver.findElement(ByClass.getByObject("id-qntySelect"));   //  css-addQnty  
	  
 	      ele = wait.until(ExpectedConditions.visibilityOfElementLocated(ByClass.getByObject("css-addQnty"))); 
 	 
	      System.out.println("entereed try " + ele);	
	 //     if( ele.findElements(By.id
	      present = true;
	      
	}
  
  catch (NoSuchElementException e) {
	  
	  System.out.println("enteredd catch ");	

	 	present = false;

		
	  System.out.println("no quantity found on the page ");	
	
	  return "no quantity found on the page ";
		 
	}
  catch (TimeoutException e) {
	  present = false;
	  
  }
  
  
  
  wait = new WebDriverWait(driver, 30);	
  
 
//  if(ele.isDisplayed())  {
  
  
  
  if(present) {
	  
	   
      System.out.println("entered if ");
  		
  	  WebElement element = driver.findElement(ByClass.getByObject("id-qntySelect"));
  		
  		Select select = new Select(element);
  		  
  		select.selectByValue(qnty);  // qnty got from the excel file
  		
  		result = " quantity selected "+qnty;
      }
 
      else  if(wait.until(ExpectedConditions.visibilityOfElementLocated
  				(ByClass.getByObject("xpath-QntyLeft1")))
  			      .isDisplayed())    {
    	  
  		System.out.println("entered else ");

  		result =  ("only 1 item left in stock" );
  		
  	 }
  	
 
	return result;
	
	 }	

else {
	    return "quantity given is 1";
     } 

}
	
	
	
//*****************************************************************************************************	
	
public String addShipping( String ship ) {
	
			
// **********  free shipping  ************
	
//  input id="bbop-check-box" name="freeTrialBBOP" value="1" type="checkbox"/>	
	
	
  WebDriverWait wait = new WebDriverWait(driver, 20);	
  String res = "";
  if (ship.equals("Y")) {
  
   if( wait.until(ExpectedConditions.visibilityOfElementLocated  		  
		   (ByClass.getByObject("css-addShipping"))).isDisplayed() ) {
	
	 driver.findElement(ByClass.getByObject("id-shippingButton")).click();
		
 	}
   else {
	   res = ("Free shipping not available on this item");
   }
  } else   {
	  
	  res =  "Free shipping not chosen by the user" ;
  }
	
//	return driver.getTitle();
  
  return res;

	
}


//*********************************************************************************************

//  String item, String sz, String color, String qnty, String ship, String areaCode

public String addAreaCode( String areaCode) {

			
// *********  address - zip  *****************
	
	
//	unifiedLocationAddrInput
	
	
	try {
		Thread.sleep(1000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

		WebDriverWait wait = new WebDriverWait(driver, 20);

		wait.until(ExpectedConditions.visibilityOfElementLocated(ByClass.getByObject("xpath-shipBox"))).click();

		driver.findElement(ByClass.getByObject("id-addAreaCode")).sendKeys("94568");
		
		wait = new WebDriverWait(driver, 20);

		wait.until(ExpectedConditions.visibilityOfElementLocated(ByClass.getByObject("xpath-updateAreaCode"))).click();

		String address =  wait.until(ExpectedConditions.visibilityOfElementLocated(ByClass.getByObject("xpath-shipBox")))
				.getText();
		 
		/* String count1 = driver.findElement(ByClass.getByObject("css-cartCount")).getText();  // to get the initial count in the cart

			
		   wait = new WebDriverWait(driver, 20);	
		
		WebElement element = wait.until(ExpectedConditions
				.visibilityOfElementLocated(ByClass.getByObject("id-addToCart"))) ;
		
		element.click();*/
		
	//	return driver.getTitle();
		 
		 return address;
		
	}


//*********************************************************************************************

	public String[] addToCartButton() {
		
		
		
		// *********  add to cart **************	
		
		try {
			Thread.sleep(500);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
 
		WebDriverWait wait = new WebDriverWait(driver, 20);

		String count1 = wait.until(ExpectedConditions.visibilityOfElementLocated(ByClass.getByObject("css-cartCount")))
				.getText();

		// String count1 =
		// driver.findElement(ByClass.getByObject("css-cartCount")).getText();
		// // to get the initial count in the cart

		System.out.println("The initial count is : " + count1);

		wait = new WebDriverWait(driver, 20);

		WebElement element = wait
				.until(ExpectedConditions.visibilityOfElementLocated(ByClass.getByObject("css-addToCart")));

		element.click();

		try {
			wait = new WebDriverWait(driver, 20);

			wait.until(ExpectedConditions.elementToBeClickable(ByClass.getByObject("id-alertPopup"))).isDisplayed();

			Alert alert = driver.switchTo().alert();

			alert.accept();

		}

		catch (NoSuchElementException e) {

		} catch (TimeoutException e) {

		}

		String count2 = driver.findElement(ByClass.getByObject("css-cartCount")).getText();

		String title = driver.getTitle();

		String[] result = { count1, count2, title };

		// String[] result = {count2,title};

		return result;

	}
	
	
	public String[] updatingCartPage() {
		
		// .//b[contains(text(),'subtotal')]
		
		  WebDriverWait wait = new WebDriverWait(driver, 20);	
			
			WebElement element = wait.until(ExpectedConditions
					.visibilityOfElementLocated(ByClass.getByObject("xpath-cartUpdateItem"))) ;	
		
			String itm = element.getText();
			
			System.out.println("item update : " + itm);
			
			
			
			
			
		String itemPrice1 = driver.findElement(By.xpath(".//b[contains(text(),'subtotal')]//following::span[1]")).getText();
		
//	    double itemPrice1 = Double.parseDouble(itmPrcText1);
			
//			.//b[contains(text(),'subtotal')]//following::span[1]    // item price in the cart page
	    
	    
	    
		driver.findElement(By.id("hlb-view-cart-announce")).click();  // cart button click

		String itemPrice2 = driver.findElement(By.xpath(".//span[contains(@class,'sc-product-price')]")).getText();
		
//	    double itemPrice2 = Double.parseDouble(itmPrcText2);

					
	    String itemName = driver.findElement(By.xpath
	    		(".//span[@class='a-list-item']//following::a/span[@class='a-size-medium sc-product-title a-text-bold']")).getText();
	    
	    
	   String itemQnty = driver.findElement(By.cssSelector
			   ("span[class='a-dropdown-prompt']")).getText();
	   
	   String[] result = {itemPrice1, itemPrice2, itemName, itemQnty};
	   
	   return result;
		
	}

}
